/*
 * Created on 24 lis 2014 ( Time 19:43:15 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */

package pl.pwl.samouczek.persistence.services.jpa;


import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceException;
import javax.persistence.Query;

import pl.pwl.samouczek.orm.jpa.UserEntity;
import pl.pwl.samouczek.persistence.commons.jpa.GenericJpaService;
import pl.pwl.samouczek.persistence.commons.jpa.JpaOperation;
import pl.pwl.samouczek.persistence.services.UserPersistence;

/**
 * JPA implementation for basic persistence operations ( entity "User" )
 * 
 * @author Telosys Tools Generator
 *
 */
public class UserPersistenceJPA extends GenericJpaService<UserEntity, Integer> implements UserPersistence {

	/**
	 * Constructor
	 */
	public UserPersistenceJPA() {
		super(UserEntity.class);
	}

	@Override
	public UserEntity load( Integer id ) {
		return super.load( id );
	}

	@Override
	public boolean delete( Integer id ) {
		return super.delete( id );
	}

	@Override
	public boolean delete(UserEntity entity) {
		if ( entity != null ) {
			return super.delete( entity.getId() );
		}
		return false ;
	}

	@Override
	public long countAll() {
		JpaOperation operation = new JpaOperation() {
			@Override
			public Object exectue(EntityManager em) throws PersistenceException {
				Query query = em.createNamedQuery("UserEntity.countAll");
				return query.getSingleResult() ;
			}
		} ;
		return (Long) execute(operation);
	}
	
	@Override
	public UserEntity retrieveByName(String username) {
		JpaOperation operation = new JpaOperation() {
			@Override
			public Object exectue(EntityManager em) throws PersistenceException {
				Query query = em.createNamedQuery("UserEntity.retrieveByName");
				query.setParameter("username", username);
				try {
					return query.getSingleResult();
				} catch (NoResultException e) {
					return null;
				}
			}
		};
		return (UserEntity) execute(operation);
	}
	
	@Override
	@SuppressWarnings("unchecked")
	public List<UserEntity> retrieveAllByRole(String role) {
		JpaOperation operation = new JpaOperation() {
			@Override
			public Object exectue(EntityManager em) throws PersistenceException {
				Query query = em.createNamedQuery("UserEntity.retrieveAllByRole");
				query.setParameter("role", role);
				return query.getResultList();
			}
		};
		return (List<UserEntity>) execute(operation);
	}

}
