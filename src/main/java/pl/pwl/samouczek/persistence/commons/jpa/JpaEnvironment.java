/*
 * Created on 24 lis 2014 ( Date ISO 2014-11-24 - Time 20:42:09 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package pl.pwl.samouczek.persistence.commons.jpa;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.PersistenceException;

import org.hibernate.exception.JDBCConnectionException;

/**
 * JPA environment for JPA operations execution <br>
 * Provided by Telosys Tools for JPA testing
 * 
 */
public class JpaEnvironment {

	private final String persistenceUnitName ; 
	private final EntityManagerFactory emf ; 
	private EntityManager em;
	
	/**
	 * Constructor 
	 * @param persistenceUnitName the name of the JPA persistence unit to be used
	 */
	public JpaEnvironment(String persistenceUnitName) {
		super();
		this.persistenceUnitName = persistenceUnitName ;
		this.emf = Persistence.createEntityManagerFactory(persistenceUnitName);
		this.em = emf.createEntityManager();
	}


	public final String getPersistenceUnitName() {
		return this.persistenceUnitName ;
	}
	
	public final Object executeWithTransaction(JpaOperation operation) throws PersistenceException {
		
		Object result = null ;
		try {
			EntityTransaction transaction = em.getTransaction();

			try {
				// Begin Transaction
				transaction.begin();
				
				// Execute application JPA operation with the current EntityManager
				result = operation.exectue(em);
				
				// Commit Transaction
				transaction.commit();
				
			} catch (JDBCConnectionException e) {
				EntityManager oldem = em;
				try {
					oldem.close();
				} catch (Exception e2) {
					// ignore
				}
				em = emf.createEntityManager();
				result = operation.exectue(em);
			} finally {
				// Rollback Transaction if Transaction is still active ( Commit not done )
				if (transaction.isActive())
					transaction.rollback();
			}
		} finally {
			// do nothing
		}
		
		return result ;
	}

	public final Object executeWithoutTransaction(JpaOperation operation) throws PersistenceException {
		
		Object result = null ;
		try {
			// Execute application JPA operation with the current EntityManager
			result = operation.exectue(em);
		} catch (JDBCConnectionException e) {
			EntityManager oldem = em;
			try {
				oldem.close();
			} catch (Exception e2) {
				// ignore
			}
			em = emf.createEntityManager();
			result = operation.exectue(em);
		} finally {
			// do nothing
		}
		
		return result ;
	}
	
	public void reloadContext() {
		if (em != null) {
			try {
				if (em.isJoinedToTransaction()) {
					em.flush();
				}
				em.close();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				em = emf.createEntityManager();
			}
		}
	}
	
}
